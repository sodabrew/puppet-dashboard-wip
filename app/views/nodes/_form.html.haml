= focus(@readonly_name ? :node_description : :node_name)

= header_for(form)

.item
  .section
    #error_messages{:style => "display: none;"}

  = render :partial => 'shared/form_errors', :object => form.object.errors

  .element
    = form.label :node, "Node"
    = form.text_field :name, :placeholder => "Enter the node name here", :disabled => !form.object.name.nil?

  .element.textarea
    = form.label :description
    = form.text_area :description, :rows => 4, :placeholder => "Enter a description for this node here..."

  - if SETTINGS.use_external_node_classification
    .element
      = render :partial => 'parameters/parameter_input', :object => form.object.parameters.sort_by{|param| param[:name] || ''}, :locals => { :entity_name => 'variable' }
    = render :partial => 'shared/tokenized_text_box',
      :locals => { :model => 'node_class',
        :title => 'Classes',
        :source => 'node' }

  = render :partial => 'shared/tokenized_text_box',
    :locals => {:model => 'node_group',
      :title => 'Groups',
      :source => 'node'}

  %script#tokenizer{:type => "text/javascript"}= tokenize_input_class(@class_data, @group_data)
